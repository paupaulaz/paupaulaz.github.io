(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{371:function(e,t,s){"use strict";s.r(t);var a=s(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"assembly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assembly"}},[e._v("#")]),e._v(" assembly")]),e._v(" "),s("h2",{attrs:{id:"basic-assembly-instructions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-assembly-instructions"}},[e._v("#")]),e._v(" basic assembly instructions")]),e._v(" "),s("div",{staticClass:"language-x86asm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("mov ebx, 123 ; ebx = 123\nmov eax, ebx ; ebx = eax\nadd ebx, eax ; ebx += eax\nsub ebx, edx ; ebx -= edx\nmul ebx\t\t\t ; eax *= ebx\ndiv edx\t\t\t ; eax /= edx\n")])])]),s("h2",{attrs:{id:"registers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registers"}},[e._v("#")]),e._v(" registers")]),e._v(" "),s("p",[e._v('EIP: instruction pointer = location of execution. Not like a normal register => cannot be altered by "mov"')])])}),[],!1,null,null,null);t.default=r.exports}}]);